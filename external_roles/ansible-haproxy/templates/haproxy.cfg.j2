global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 120s
    user {{ haproxy_user }}
    group {{ haproxy_group }}
    daemon
	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 100000
        timeout client  500000
        timeout server  500000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend stats
    bind *:{{ haproxy_stats_port }}
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_password }}


frontend https
    bind :443 ssl crt /etc/certificates/
    mode http
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    # BEGIN CORS
    http-response set-header Access-Control-Allow-Origin "*"
    http-response set-header Access-Control-Allow-Methods "GET, OPTIONS, POST, PUT"

    # Logging special things
    capture request  header Host len 20
    capture response header Location len 20
    default_backend {{ haproxy_default_backend_name }}

    # Place for all the ACL's
    {% for frontend in haproxy_frontends %}
    acl {{ frontend.name }} hdr(host) req_ssl_sni -i {{ frontend.address }}
    acl {{ frontend.name }} hdr(host) req_ssl_sni -i {{ frontend.address }}:443
    use_backend {{ frontend.backend }} if {{ frontend.name }}

    {% endfor %}


# Place for all the backends
{% for backend in haproxy_backend_servers %}
backend {{ backend.name }}
    balance roundrobin
    option forwardfor
    option http-server-close
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server {{ backend.name }} {{ backend.address }} {{ backend.options }}
    {{ backend.extra_functions | default('') }}
{% endfor %}