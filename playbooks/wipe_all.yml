---
- name: Wipe all!!
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Stop cl beacon node container
      shell: "docker rm -f {{beacon_container_name}}"
      register: stop_result
      failed_when: "(stop_result.rc >= 1) and not ('No such container' in stop_result.stderr)"
    - name: Remove beacon data
      become: true
      file:
        path: "{{beacon_node_dir}}"
        state: absent
    - name: Stop cl validator client container
      shell: "docker rm -f {{validator_container_name}}"
      register: stop_result
      failed_when: "(stop_result.rc >= 1) and not ('No such container' in stop_result.stderr)"
    - name: Remove validator data
      become: true
      file:
        path: "{{validator_node_dir}}"
        state: absent
    - name: Stop execution client container
      shell: "docker rm -f {{el_client_name}}"
      register: stop_result
      failed_when: "(stop_result.rc >= 1) and not ('No such container' in stop_result.stderr)"
    - name: Remove execution data
      become: true
      file:
        path: "{{el_node_dir}}"
        state: absent
    - name: Remove testnet dir
      become: true
      when: (testnet_type == 'custom') or
        (testnet_type == 'prater' and cl_client_name == 'prysm')
      file:
        path: "{{testnet_dir}}"
        state: absent
    - name: Remove jwt secret
      become: true
      file:
        path: "{{ home_dir }}/jwtsecret"
        state: absent
    - name: Stop RPC snooper container
      shell: "docker rm -f {{snoop_container_name}}"
      register: stop_result
      failed_when: "(stop_result.rc >= 1) and not ('No such container' in stop_result.stderr)"
    - name: Stop metrics container
      shell: "docker rm -f {{eth_metrics_exporter_name}}"
      register: stop_result
      failed_when: "(stop_result.rc >= 1) and not ('No such container' in stop_result.stderr)"
#     - name: Stop node_exporter service
#       systemd:
#         state: stopped
#         name: node_exporter
#       ignore_errors: yes
#     - name: Stop prometheus service
#       systemd:
#         state: stopped
#         name: prometheus
#       ignore_errors: yes
#     - name: Disable node exporter
#       systemd:
#         name: node_exporter
#         enabled: no
#         masked: no
#       ignore_errors: yes
#     - name: Disable prometheus
#       systemd:
#         name: prometheus
#         enabled: no
#         masked: no
#       ignore_errors: yes
#     - name: Delete the systemD unit file
#       file:
#         path: /etc/systemd/system/node_exporter.service
#         state: absent
#     - name: Delete the systemD unit file
#       file:
#         path: /etc/systemd/system/prometheus.service
#         state: absent
#     - name: Reload systemD
#       systemd:
#         daemon_reload: yes
#     - name: Delete the bin
#       file:
#         path: /usr/local/bin/node_exporter
#         state: absent
#     - name: Delete user
#       user:
#         name: node_exp
#         state: absent
#         group: node_exp
#         shell: "/sbin/nologin"
#     - name: Delete user
#       user:
#         name: prometheus
#         state: absent
#         group: prometheus
#         shell: "/sbin/nologin"
#     - name: Delete the node exporter config
#       file:
#         path: /etc/default/node_exporter
#         state: absent
#     - name: Delete the prometheus config
#       file:
#         path: /etc/default/prometheus
#         state: absent